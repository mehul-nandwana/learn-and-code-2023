<StyleCopViolations>
  <Violation Section="Root.KarprekarContant.Contants" LineNumber="3" Source="C:\Users\mehul.nandwana\source\repos\KarprekarContant\KarprekarContant\Contants.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The class must have a documentation header.</Violation>
  <Violation Section="Root.KarprekarContant.Contants.karprekarConstant" LineNumber="5" Source="C:\Users\mehul.nandwana\source\repos\KarprekarContant\KarprekarContant\Contants.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The field must have a documentation header.</Violation>
  <Violation Section="Root" LineNumber="1" Source="C:\Users\mehul.nandwana\source\repos\KarprekarContant\KarprekarContant\Contants.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="FileMustHaveHeader" RuleId="SA1633">The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Violation>
  <Violation Section="Root.KarprekarContant.Contants.karprekarConstant" LineNumber="5" Source="C:\Users\mehul.nandwana\source\repos\KarprekarContant\KarprekarContant\Contants.cs" RuleNamespace="StyleCop.CSharp.MaintainabilityRules" Rule="FieldsMustBePrivate" RuleId="SA1401">Fields must be declared with private access. Use properties to expose fields.</Violation>
  <Violation Section="Root.KarprekarContant.Contants.karprekarConstant" LineNumber="5" Source="C:\Users\mehul.nandwana\source\repos\KarprekarContant\KarprekarContant\Contants.cs" RuleNamespace="StyleCop.CSharp.NamingRules" Rule="AccessibleFieldsMustBeginWithUpperCaseLetter" RuleId="SA1307">Public and internal fields must start with an upper-case letter: karprekarConstant.</Violation>
  <Violation Section="Root.KarprekarContant.Contants.karprekarConstant" LineNumber="5" Source="C:\Users\mehul.nandwana\source\repos\KarprekarContant\KarprekarContant\Contants.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="DeclarationKeywordsMustFollowOrder" RuleId="SA1206">The access modifier keyword must come before the 'static' keyword in the element declaration.</Violation>
  <Violation Section="Root.KarprekarContant.KarparekarConstantEvaluator" LineNumber="3" Source="C:\Users\mehul.nandwana\source\repos\KarprekarContant\KarprekarContant\KarparekarConstantEvaluator.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The class must have a documentation header.</Violation>
  <Violation Section="Root.KarprekarContant.KarparekarConstantEvaluator.IsValidNumberForKarekarConstant%int" LineNumber="5" Source="C:\Users\mehul.nandwana\source\repos\KarprekarContant\KarprekarContant\KarparekarConstantEvaluator.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation Section="Root.KarprekarContant.KarparekarConstantEvaluator.ConvertToIntArray%int" LineNumber="31" Source="C:\Users\mehul.nandwana\source\repos\KarprekarContant\KarprekarContant\KarparekarConstantEvaluator.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation Section="Root.KarprekarContant.KarparekarConstantEvaluator.ConvertArrayToNumber%int[]" LineNumber="43" Source="C:\Users\mehul.nandwana\source\repos\KarprekarContant\KarprekarContant\KarparekarConstantEvaluator.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation Section="Root" LineNumber="1" Source="C:\Users\mehul.nandwana\source\repos\KarprekarContant\KarprekarContant\KarparekarConstantEvaluator.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="FileMustHaveHeader" RuleId="SA1633">The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Violation>
  <Violation Section="Root.KarprekarContant.KarparekarConstantEvaluator.IsValidNumberForKarekarConstant%int" LineNumber="24" Source="C:\Users\mehul.nandwana\source\repos\KarprekarContant\KarprekarContant\KarparekarConstantEvaluator.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation Section="Root.KarprekarContant.KarparekarConstantEvaluator.IsValidNumberForKarekarConstant%int" LineNumber="27" Source="C:\Users\mehul.nandwana\source\repos\KarprekarContant\KarprekarContant\KarparekarConstantEvaluator.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="ClosingCurlyBracketsMustNotBePrecededByBlankLine" RuleId="SA1508">A closing curly bracket must not be preceded by a blank line.</Violation>
  <Violation Section="Root.KarprekarContant.KarparekarConstantEvaluator.IsValidNumberForKarekarConstant%int" LineNumber="27" Source="C:\Users\mehul.nandwana\source\repos\KarprekarContant\KarprekarContant\KarparekarConstantEvaluator.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="ClosingCurlyBracketMustBeFollowedByBlankLine" RuleId="SA1513">Statements or elements wrapped in curly brackets must be followed by a blank line.</Violation>
  <Violation Section="Root.KarprekarContant.KarparekarConstantEvaluator.ConvertToIntArray%int" LineNumber="39" Source="C:\Users\mehul.nandwana\source\repos\KarprekarContant\KarprekarContant\KarparekarConstantEvaluator.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="ClosingCurlyBracketMustBeFollowedByBlankLine" RuleId="SA1513">Statements or elements wrapped in curly brackets must be followed by a blank line.</Violation>
  <Violation Section="Root.KarprekarContant.KarparekarConstantEvaluator.ConvertArrayToNumber%int[]" LineNumber="50" Source="C:\Users\mehul.nandwana\source\repos\KarprekarContant\KarprekarContant\KarparekarConstantEvaluator.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="ClosingCurlyBracketMustBeFollowedByBlankLine" RuleId="SA1513">Statements or elements wrapped in curly brackets must be followed by a blank line.</Violation>
  <Violation Section="Root.KarprekarContant.KarparekarConstantEvaluator.ConvertArrayToNumber%int[]" LineNumber="49" Source="C:\Users\mehul.nandwana\source\repos\KarprekarContant\KarprekarContant\KarparekarConstantEvaluator.cs" RuleNamespace="StyleCop.CSharp.MaintainabilityRules" Rule="ArithmeticExpressionsMustDeclarePrecedence" RuleId="SA1407">Insert parenthesis within the arithmetic expression to declare the operator precedence.</Violation>
  <Violation Section="Root.KarprekarContant.NumberValidator" LineNumber="3" Source="C:\Users\mehul.nandwana\source\repos\KarprekarContant\KarprekarContant\NumberValidator.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The class must have a documentation header.</Violation>
  <Violation Section="Root.KarprekarContant.NumberValidator.IsNumberValid%int" LineNumber="5" Source="C:\Users\mehul.nandwana\source\repos\KarprekarContant\KarprekarContant\NumberValidator.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation Section="Root" LineNumber="1" Source="C:\Users\mehul.nandwana\source\repos\KarprekarContant\KarprekarContant\NumberValidator.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="FileMustHaveHeader" RuleId="SA1633">The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Violation>
  <Violation Section="Root.KarprekarContant.NumberValidator.IsNumberValid%int" LineNumber="11" Source="C:\Users\mehul.nandwana\source\repos\KarprekarContant\KarprekarContant\NumberValidator.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation Section="Root.KarprekarContant.NumberValidator.IsNumberValid%int" LineNumber="16" Source="C:\Users\mehul.nandwana\source\repos\KarprekarContant\KarprekarContant\NumberValidator.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="ClosingCurlyBracketMustBeFollowedByBlankLine" RuleId="SA1513">Statements or elements wrapped in curly brackets must be followed by a blank line.</Violation>
  <Violation Section="Root.KarprekarContant.NumberValidator.IsNumberValid%int" LineNumber="19" Source="C:\Users\mehul.nandwana\source\repos\KarprekarContant\KarprekarContant\NumberValidator.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="ClosingCurlyBracketsMustNotBePrecededByBlankLine" RuleId="SA1508">A closing curly bracket must not be preceded by a blank line.</Violation>
  <Violation Section="Root.KarprekarContant.NumberValidator.IsNumberValid%int" LineNumber="7" Source="C:\Users\mehul.nandwana\source\repos\KarprekarContant\KarprekarContant\NumberValidator.cs" RuleNamespace="StyleCop.CSharp.MaintainabilityRules" Rule="ArithmeticExpressionsMustDeclarePrecedence" RuleId="SA1407">Insert parenthesis within the arithmetic expression to declare the operator precedence.</Violation>
  <Violation Section="Root.KarprekarContant.NumberValidator.IsNumberValid%int" LineNumber="8" Source="C:\Users\mehul.nandwana\source\repos\KarprekarContant\KarprekarContant\NumberValidator.cs" RuleNamespace="StyleCop.CSharp.MaintainabilityRules" Rule="ArithmeticExpressionsMustDeclarePrecedence" RuleId="SA1407">Insert parenthesis within the arithmetic expression to declare the operator precedence.</Violation>
  <Violation Section="Root.Solution.KarprekarConstant" LineNumber="5" Source="C:\Users\mehul.nandwana\source\repos\KarprekarContant\KarprekarContant\Program.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The class must have a documentation header.</Violation>
  <Violation Section="Root.Solution.KarprekarConstant.Main%string[]" LineNumber="7" Source="C:\Users\mehul.nandwana\source\repos\KarprekarContant\KarprekarContant\Program.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation Section="Root" LineNumber="1" Source="C:\Users\mehul.nandwana\source\repos\KarprekarContant\KarprekarContant\Program.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="FileMustHaveHeader" RuleId="SA1633">The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Violation>
  <Violation Section="Root.Solution.KarprekarConstant.Main%string[]" LineNumber="17" Source="C:\Users\mehul.nandwana\source\repos\KarprekarContant\KarprekarContant\Program.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation Section="Root.Solution.KarprekarConstant.Main%string[]" LineNumber="22" Source="C:\Users\mehul.nandwana\source\repos\KarprekarContant\KarprekarContant\Program.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the else statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation Section="Root.Solution.KarprekarConstant.Main%string[]" LineNumber="8" Source="C:\Users\mehul.nandwana\source\repos\KarprekarContant\KarprekarContant\Program.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="OpeningCurlyBracketsMustNotBeFollowedByBlankLine" RuleId="SA1505">An opening curly bracket must not be followed by a blank line.</Violation>
  <Violation Section="Root.Solution.KarprekarConstant.Main%string[]" LineNumber="24" Source="C:\Users\mehul.nandwana\source\repos\KarprekarContant\KarprekarContant\Program.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="ClosingCurlyBracketsMustNotBePrecededByBlankLine" RuleId="SA1508">A closing curly bracket must not be preceded by a blank line.</Violation>
  <Violation Section="Root.Solution.KarprekarConstant" LineNumber="26" Source="C:\Users\mehul.nandwana\source\repos\KarprekarContant\KarprekarContant\Program.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="ClosingCurlyBracketsMustNotBePrecededByBlankLine" RuleId="SA1508">A closing curly bracket must not be preceded by a blank line.</Violation>
  <Violation Section="Root.Solution" LineNumber="28" Source="C:\Users\mehul.nandwana\source\repos\KarprekarContant\KarprekarContant\Program.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="ClosingCurlyBracketsMustNotBePrecededByBlankLine" RuleId="SA1508">A closing curly bracket must not be preceded by a blank line.</Violation>
  <Violation Section="Root.Solution.KarprekarConstant" LineNumber="5" Source="C:\Users\mehul.nandwana\source\repos\KarprekarContant\KarprekarContant\Program.cs" RuleNamespace="StyleCop.CSharp.MaintainabilityRules" Rule="AccessModifierMustBeDeclared" RuleId="SA1400">The class must have an access modifier.</Violation>
  <Violation Section="Root.KarprekarContant" LineNumber="1" Source="C:\Users\mehul.nandwana\source\repos\KarprekarContant\KarprekarContant\Program.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="UsingDirectivesMustBePlacedWithinNamespace" RuleId="SA1200">All using directives must be placed inside of the namespace.</Violation>
  <Violation Section="Root.Solution.KarprekarConstant.Main%string[]" LineNumber="19" Source="C:\Users\mehul.nandwana\source\repos\KarprekarContant\KarprekarContant\Program.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="OpeningParenthesisMustBeOnDeclarationLine" RuleId="SA1110">The opening parenthesis or bracket must be placed on the same line as the name of the method.</Violation>
</StyleCopViolations>